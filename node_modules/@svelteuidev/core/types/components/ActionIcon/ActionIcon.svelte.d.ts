import { SvelteComponentTyped } from "svelte";
import type { ActionIconProps as $$ActionIconProps } from './ActionIcon.styles';
declare const __propDef: {
    props: {
        [x: string]: any;
        use?: $$ActionIconProps['use'];
        element?: $$ActionIconProps['element'];
        class?: string;
        override?: $$ActionIconProps['override'];
        root?: $$ActionIconProps['root'];
        color?: $$ActionIconProps['color'];
        variant?: $$ActionIconProps['variant'];
        size?: $$ActionIconProps['size'];
        radius?: $$ActionIconProps['radius'];
        loaderProps?: $$ActionIconProps['loaderProps'];
        loading?: $$ActionIconProps['loading'];
        disabled?: $$ActionIconProps['disabled'];
        href?: $$ActionIconProps['href'];
        external?: $$ActionIconProps['external'];
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        default: {};
    };
};
export declare type ActionIconProps = typeof __propDef.props;
export declare type ActionIconEvents = typeof __propDef.events;
export declare type ActionIconSlots = typeof __propDef.slots;
/**
 * Icon button to indicate secondary action.
 *
 * @see https://svelteui.org/core/action-icon
 * @example
 * ```tsx
 * <ActionIcon>Click</ActionIcon> // standard ActionIcon
 * <ActionIcon color="red" /> // red ActionIcon
 * <ActionIcon variant="default"><Discord></ActionIcon> // default variant with an icon
 * ```
 */
export default class ActionIcon extends SvelteComponentTyped<ActionIconProps, ActionIconEvents, ActionIconSlots> {
}
export {};
