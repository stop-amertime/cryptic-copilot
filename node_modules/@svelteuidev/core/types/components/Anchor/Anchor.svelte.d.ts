import { SvelteComponentTyped } from "svelte";
import type { AnchorProps as $$AnchorProps } from './Anchor.styles';
declare const __propDef: {
    props: {
        [x: string]: any;
        use?: $$AnchorProps['use'];
        element?: $$AnchorProps['element'];
        class?: string;
        override?: $$AnchorProps['override'];
        root?: $$AnchorProps['root'];
        align?: $$AnchorProps['align'];
        color?: $$AnchorProps['color'];
        transform?: $$AnchorProps['transform'];
        weight?: $$AnchorProps['weight'];
        gradient?: $$AnchorProps['gradient'];
        inline?: $$AnchorProps['inline'];
        lineClamp?: $$AnchorProps['lineClamp'];
        underline?: $$AnchorProps['underline'];
        inherit?: $$AnchorProps['inherit'];
        href?: $$AnchorProps['href'];
        tracking?: $$AnchorProps['tracking'];
        external?: $$AnchorProps['external'];
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        default: {};
    };
};
export declare type AnchorProps = typeof __propDef.props;
export declare type AnchorEvents = typeof __propDef.events;
export declare type AnchorSlots = typeof __propDef.slots;
/**
 * **UNSTABLE:** new API, yet to be vetted.
 *
 * Display an anchor text that is a wrapper around `Text` component using an `a` as the default
 * root.
 *
 * @see https://svelteui.org/core/anchor
 * @example
 *    ```svelte
 *    <Anchor href="https://svelteui.org/">Main Page</Anchor>
 *    <Anchor root={ Button } href="https://svelteui.org/" target="_blank">Documentation</Anchor>
 *    <Anchor root={ Link } to="/home" color='violet' size='lg'>Click here</Anchor>
 *    ```
 */
export default class Anchor extends SvelteComponentTyped<AnchorProps, AnchorEvents, AnchorSlots> {
}
export {};
