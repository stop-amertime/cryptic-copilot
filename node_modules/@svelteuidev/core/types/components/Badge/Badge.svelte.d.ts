import { SvelteComponentTyped } from "svelte";
import type { BadgeProps as $$BadgeProps } from './Badge.styles';
declare const __propDef: {
    props: {
        [x: string]: any;
        use?: $$BadgeProps['use'];
        element?: $$BadgeProps['element'];
        class?: string;
        override?: $$BadgeProps['override'];
        color?: $$BadgeProps['color'];
        variant?: $$BadgeProps['variant'];
        gradient?: $$BadgeProps['gradient'];
        size?: $$BadgeProps['size'];
        radius?: $$BadgeProps['radius'];
        fullWidth?: $$BadgeProps['fullWidth'];
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        leftSection: {};
        default: {};
        rightSection: {};
    };
};
export declare type BadgeProps = typeof __propDef.props;
export declare type BadgeEvents = typeof __propDef.events;
export declare type BadgeSlots = typeof __propDef.slots;
/**
 * **UNSTABLE:** new API, yet to be vetted.
 *
 * Display badge, pill or tag
 *
 * @see https://svelteui.org/core/badge
 * @example
 *    ```svelte
 *    <Badge>Badge</Badge>
 * <Badge variant="gradient" gradient={{ from: 'indigo', to: 'cyan' }}>Indigo cyan</Badge>
 * <Box css={{ width: 120 }}>
 * 	<Badge variant="filled" fullWidth>Badge with overflow</Badge>
 * </Box>
 *    ```
 */
export default class Badge extends SvelteComponentTyped<BadgeProps, BadgeEvents, BadgeSlots> {
}
export {};
