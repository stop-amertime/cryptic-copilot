import { SvelteComponentTyped } from "svelte";
import type { CodeProps as $$CodeProps } from './Code.styles';
declare const __propDef: {
    props: {
        [x: string]: any;
        use?: $$CodeProps['use'];
        element?: $$CodeProps['element'];
        class?: string;
        override?: $$CodeProps['override'];
        color?: $$CodeProps['color'];
        block?: $$CodeProps['block'];
        width?: $$CodeProps['width'];
        copy?: $$CodeProps['copy'];
        message?: $$CodeProps['message'];
        noMono?: $$CodeProps['noMono'];
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        default: {};
    };
};
export declare type CodeProps = typeof __propDef.props;
export declare type CodeEvents = typeof __propDef.events;
export declare type CodeSlots = typeof __propDef.slots;
/**
 * Inline or block code without syntax highlighting
 *
 * @see https://svelteui.org/core/code
 * @example
 *    ```tsx
 *    <Code color='green' size='lg' variant='bars' /> // standard code component
 *    <Code color='blue' block copy message={codeToCopy} /> // code with block and copy props
 *    ```
 */
export default class Code extends SvelteComponentTyped<CodeProps, CodeEvents, CodeSlots> {
}
export {};
