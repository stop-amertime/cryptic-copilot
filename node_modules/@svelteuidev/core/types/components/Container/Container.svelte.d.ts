import { SvelteComponentTyped } from "svelte";
import type { ContainerProps as $$ContainerProps } from './Container.styles';
declare const __propDef: {
    props: {
        [x: string]: any;
        use?: $$ContainerProps['use'];
        element?: $$ContainerProps['element'];
        class?: string;
        override?: $$ContainerProps['override'];
        size?: $$ContainerProps['size'];
        fluid?: $$ContainerProps['fluid'];
        sizes?: $$ContainerProps['sizes'];
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        default: {};
    };
};
export declare type ContainerProps = typeof __propDef.props;
export declare type ContainerEvents = typeof __propDef.events;
export declare type ContainerSlots = typeof __propDef.slots;
/**
 * Center content horizontally with predefined max-width
 *
 * @see https://svelteui.org/core/container
 * @example
 *    ```svelte
 *    <Container>
 *        Default container
 *    </Container>
 *
 *    <Container size="xs" px="xs">
 *        xs container with xs horizontal padding
 *    </Container>
 *
 *    <Container size={200} px={0}>
 *        200px container with 0px horizontal padding
 *    </Container>
 *    ```
 */
export default class Container extends SvelteComponentTyped<ContainerProps, ContainerEvents, ContainerSlots> {
}
export {};
