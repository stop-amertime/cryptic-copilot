import { SvelteComponentTyped } from "svelte";
import type { DividerProps as $$DividerProps } from './Divider.styles';
declare const __propDef: {
    props: {
        [x: string]: any;
        use?: $$DividerProps['use'];
        element?: $$DividerProps['element'];
        class?: string;
        override?: $$DividerProps['override'];
        color?: $$DividerProps['color'];
        orientation?: $$DividerProps['orientation'];
        size?: $$DividerProps['size'];
        label?: $$DividerProps['label'];
        labelPosition?: $$DividerProps['labelPosition'];
        labelProps?: $$DividerProps['labelProps'];
        variant?: $$DividerProps['variant'];
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        label: {};
    };
};
export declare type DividerProps = typeof __propDef.props;
export declare type DividerEvents = typeof __propDef.events;
export declare type DividerSlots = typeof __propDef.slots;
/**
 * Renders horizontal or vertical line with support for label string or component.
 *
 * @see https://svelteui.org/core/container
 * @example
 * ```svelte
 * <Divider />
 * <Divider variant='dashed' />
 * <Divider variant='dotted' />
 * <Divider size='md' />
 * <Divider label="This is a new section" labelPosition='center' />
 * <Divider label="Click here" labelPosition='right' labelProps={{ variant: 'link', href: 'https://svelteui.org', root: 'a' }} />
 * <Divider>
 *     <Button slot='label' />
 * </Divider>
 * ```
 */
export default class Divider extends SvelteComponentTyped<DividerProps, DividerEvents, DividerSlots> {
}
export {};
