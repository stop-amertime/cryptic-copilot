import { SvelteComponentTyped } from "svelte";
import type { GroupProps as $$GroupProps } from './Group.styles';
declare const __propDef: {
    props: {
        [x: string]: any;
        use?: $$GroupProps['use'];
        element?: $$GroupProps['element'];
        class?: string;
        override?: $$GroupProps['override'];
        position?: $$GroupProps['position'];
        noWrap?: $$GroupProps['noWrap'];
        grow?: $$GroupProps['grow'];
        spacing?: $$GroupProps['spacing'];
        direction?: $$GroupProps['direction'];
        align?: $$GroupProps['align'];
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        default: {};
    };
};
export declare type GroupProps = typeof __propDef.props;
export declare type GroupEvents = typeof __propDef.events;
export declare type GroupSlots = typeof __propDef.slots;
/**
 * Compose elements and components in a vertical flex container.
 *
 * @see https://svelteui.org/core/group
 * @example
 *    ```svelte
 *    <Group grow>
 * 	<Button variant="outline">1</Button>
 * 	<Button variant="outline">2</Button>
 * 	<Button variant="outline">3</Button>
 * </Group>
 *    ```
 */
export default class Group extends SvelteComponentTyped<GroupProps, GroupEvents, GroupSlots> {
}
export {};
