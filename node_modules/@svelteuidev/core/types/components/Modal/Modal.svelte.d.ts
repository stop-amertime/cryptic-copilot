import { SvelteComponentTyped } from "svelte";
import type { ModalProps as $$ModalProps } from './Modal.styles';
declare const __propDef: {
    props: {
        [x: string]: any;
        use?: $$ModalProps['use'];
        element?: $$ModalProps['element'];
        class?: string;
        override?: $$ModalProps['override'];
        opened?: $$ModalProps['opened'];
        title?: $$ModalProps['title'];
        zIndex?: $$ModalProps['zIndex'];
        overflow?: $$ModalProps['overflow'];
        withCloseButton?: $$ModalProps['withCloseButton'];
        overlayOpacity?: $$ModalProps['overlayOpacity'];
        overlayColor?: $$ModalProps['overlayColor'];
        overlayBlur?: $$ModalProps['overlayBlur'];
        radius?: $$ModalProps['radius'];
        size?: $$ModalProps['size'];
        closeButtonLabel?: $$ModalProps['closeButtonLabel'];
        id?: $$ModalProps['id'];
        shadow?: $$ModalProps['shadow'];
        padding?: $$ModalProps['padding'];
        closeOnClickOutside?: $$ModalProps['closeOnClickOutside'];
        closeOnEscape?: $$ModalProps['closeOnEscape'];
        trapFocus?: $$ModalProps['trapFocus'];
        centered?: $$ModalProps['centered'];
        target?: $$ModalProps['target'];
        withinPortal?: $$ModalProps['withinPortal'];
        onClose: $$ModalProps['onClose'];
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        default: {};
    };
};
export declare type ModalProps = typeof __propDef.props;
export declare type ModalEvents = typeof __propDef.events;
export declare type ModalSlots = typeof __propDef.slots;
export default class Modal extends SvelteComponentTyped<ModalProps, ModalEvents, ModalSlots> {
}
export {};
