import { SvelteComponentTyped } from "svelte";
import type { NotificationProps as $$NotificationProps } from './Notification.styles';
declare const __propDef: {
    props: {
        [x: string]: any;
        use?: $$NotificationProps['use'];
        element?: $$NotificationProps['element'];
        class?: string;
        override?: $$NotificationProps['override'];
        title?: $$NotificationProps['title'];
        color?: $$NotificationProps['color'];
        radius?: $$NotificationProps['radius'];
        loading?: $$NotificationProps['loading'];
        icon?: $$NotificationProps['icon'];
        iconSize?: $$NotificationProps['iconSize'];
        iconProps?: $$NotificationProps['iconProps'];
        withCloseButton?: $$NotificationProps['withCloseButton'];
        closeButtonLabel?: $$NotificationProps['closeButtonLabel'];
        closeButtonProps?: $$NotificationProps['closeButtonProps'];
        onClose?: $$NotificationProps['onClose'];
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        icon: {
            class: string;
        };
        default: {};
    };
};
export declare type NotificationProps = typeof __propDef.props;
export declare type NotificationEvents = typeof __propDef.events;
export declare type NotificationSlots = typeof __propDef.slots;
export default class Notification extends SvelteComponentTyped<NotificationProps, NotificationEvents, NotificationSlots> {
}
export {};
