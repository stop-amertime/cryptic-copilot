import { SvelteComponentTyped } from "svelte";
import type { NumberInputProps as $$NumberInputProps } from './NumberInput.styles';
declare const __propDef: {
    props: {
        [x: string]: any;
        use?: $$NumberInputProps['use'];
        element?: $$NumberInputProps['element'];
        class?: string;
        override?: $$NumberInputProps['override'];
        overrideControls?: $$NumberInputProps['override'];
        root?: $$NumberInputProps['root'];
        placeholder?: $$NumberInputProps['placeholder'];
        icon?: $$NumberInputProps['icon'];
        iconWidth?: $$NumberInputProps['iconWidth'];
        iconProps?: $$NumberInputProps['iconProps'];
        wrapperProps?: $$NumberInputProps['wrapperProps'];
        required?: $$NumberInputProps['required'];
        radius?: $$NumberInputProps['radius'];
        variant?: $$NumberInputProps['variant'];
        disabled?: $$NumberInputProps['disabled'];
        size?: $$NumberInputProps['size'];
        value?: $$NumberInputProps['value'];
        defaultValue?: $$NumberInputProps['defaultValue'];
        decimalSeparator?: $$NumberInputProps['decimalSeparator'];
        min?: $$NumberInputProps['min'];
        max?: $$NumberInputProps['max'];
        step?: $$NumberInputProps['step'];
        stepHoldDelay?: $$NumberInputProps['stepHoldDelay'];
        stepHoldInterval?: $$NumberInputProps['stepHoldInterval'];
        hideControls?: $$NumberInputProps['hideControls'];
        precision?: $$NumberInputProps['precision'];
        noClampOnBlur?: $$NumberInputProps['noClampOnBlur'];
        formatter?: $$NumberInputProps['formatter'];
        parser?: $$NumberInputProps['parser'];
        increment?: () => void;
        decrement?: () => void;
    };
    events: {
        change: CustomEvent<any>;
    } & {
        [evt: string]: CustomEvent<any>;
    };
    slots: {};
};
export declare type NumberInputProps = typeof __propDef.props;
export declare type NumberInputEvents = typeof __propDef.events;
export declare type NumberInputSlots = typeof __propDef.slots;
/**
 * **UNSTABLE**: new API, yet to be vetted.
 *
 * Number input component that allows inputting numbers and incremeting/decrementing them, as well as set steps, minimum and maximum
 * values and add custom parsers and formatters.
 *
 * @see https://svelteui.org/core/number-input
 * @example
 *    ```svelte
 *    <NumberInput defaultValue={2} />
 * <NumberInput max={10} min={0} step={0.5} precision={1} />
 * <NumberInput defaultValue={0} step={0.2} precision={2} decimalSeparator="," />
 * <NumberInput label='Your age' required defaultValue={0} />
 *    ```
 */
export default class NumberInput extends SvelteComponentTyped<NumberInputProps, NumberInputEvents, NumberInputSlots> {
    get increment(): () => void;
    get decrement(): () => void;
}
export {};
