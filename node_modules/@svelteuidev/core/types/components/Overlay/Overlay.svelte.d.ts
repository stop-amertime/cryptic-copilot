import { SvelteComponentTyped } from "svelte";
import type { OverlayProps as $$OverlayProps } from './Overlay.styles';
declare const __propDef: {
    props: {
        [x: string]: any;
        use?: $$OverlayProps['use'];
        element?: $$OverlayProps['element'];
        class?: string;
        override?: $$OverlayProps['override'];
        opacity?: $$OverlayProps['opacity'];
        color?: $$OverlayProps['color'];
        blur?: $$OverlayProps['blur'];
        gradient?: $$OverlayProps['gradient'];
        zIndex?: $$OverlayProps['zIndex'];
        radius?: $$OverlayProps['radius'];
        center?: boolean;
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        default: {};
    };
};
export declare type OverlayProps = typeof __propDef.props;
export declare type OverlayEvents = typeof __propDef.events;
export declare type OverlaySlots = typeof __propDef.slots;
/**
 * Overlays given element with div element with any color and opacity
 *
 * @see https://svelteui.org/core/overlay
 * @example
 *    ```svelte
 * <Box sx={{ height: 100, position: 'relative' }}>
 *       	<Overlay opacity={0.6} color="#000" blur={2} />
 *        Overlay with a blur
 *    </Box>
 * <Box sx={{ height: 100, position: 'relative' }}>
 *       	<Overlay gradient={`linear-gradient(105deg, black 20%, #312f2f 50%, $gray400 100%)`} />
 *        Overlay with a gradient
 *    </Box>
 * <Overlay center>
 * 	This content sits on top of the overlay
 * </Overlay>
 *    ```
 */
export default class Overlay extends SvelteComponentTyped<OverlayProps, OverlayEvents, OverlaySlots> {
}
export {};
