import { SvelteComponentTyped } from "svelte";
import type { PopperProps as $$PopperProps } from './Popper.styles';
declare const __propDef: {
    props: {
        [x: string]: any;
        use?: $$PopperProps['use'];
        element?: $$PopperProps['element'];
        class?: string;
        override?: $$PopperProps['override'];
        position?: $$PopperProps['position'];
        placement?: $$PopperProps['placement'];
        gutter?: $$PopperProps['gutter'];
        arrowSize?: $$PopperProps['arrowSize'];
        arrowDistance?: $$PopperProps['arrowDistance'];
        arrowClassName?: $$PopperProps['arrowClassName'];
        withArrow?: $$PopperProps['withArrow'];
        zIndex?: $$PopperProps['zIndex'];
        transition?: $$PopperProps['transition'];
        transitionDuration?: $$PopperProps['transitionDuration'];
        exitTransition?: $$PopperProps['exitTransition'];
        exitTransitionDuration?: $$PopperProps['exitTransitionDuration'];
        mounted?: $$PopperProps['mounted'];
        reference?: $$PopperProps['reference'];
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        default: {};
    };
};
export declare type PopperProps = typeof __propDef.props;
export declare type PopperEvents = typeof __propDef.events;
export declare type PopperSlots = typeof __propDef.slots;
/**
 * **UNSTABLE**: new API, yet to be vetted.
 *
 * Shows content that is positioned based on the reference element provided as well as the psitioning
 * and placement options.
 *
 * @see https://svelteui.org/core/overlay
 * @example
 *    ```svelte
 * <Button bind:element={ref} on:click={() => mounted = !mounted }>Click here</Button>
 * <Popper
 * 	reference={ref}
 * 	placement="center"
 * 	position="bottom"
 * 	{mounted}
 * 	withArrow={true}
 * 	override={{ '& .arrow': { backgroundColor: '$gray100' } }}
 * >
 * 	<Box css={{ backgroundColor: '$gray100', borderRadius: 5, padding: '30px' }}>
 * 		<Center css={{ width: 100 }}>
 * 			<Text>This is a very long text</Text>
 * 		</Center>
 * 	</Box>
 * </Popper>
 *    ```
 */
export default class Popper extends SvelteComponentTyped<PopperProps, PopperEvents, PopperSlots> {
}
export {};
