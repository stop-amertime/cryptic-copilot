import { SvelteComponentTyped } from "svelte";
import type { StackProps as $$StackProps } from './Stack.styles';
declare const __propDef: {
    props: {
        [x: string]: any;
        use?: $$StackProps['use'];
        element?: $$StackProps['element'];
        class?: string;
        override?: $$StackProps['override'];
        spacing?: $$StackProps['spacing'];
        align?: $$StackProps['align'];
        justify?: $$StackProps['justify'];
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        default: {};
    };
};
export declare type StackProps = typeof __propDef.props;
export declare type StackEvents = typeof __propDef.events;
export declare type StackSlots = typeof __propDef.slots;
/**
 * Compose elements and components in a vertical flex container.
 *
 * @see https://svelteui.org/core/stack
 * @example
 *    ```svelte
 *    <Stack align="flex-end" justify="space-between" override={{ height: 300 }}>
 * 	<Button variant="outline">1</Button>
 * 	<Button variant="outline">2</Button>
 * 	<Button variant="outline">3</Button>
 * </Stack>
 *    ```
 */
export default class Stack extends SvelteComponentTyped<StackProps, StackEvents, StackSlots> {
}
export {};
