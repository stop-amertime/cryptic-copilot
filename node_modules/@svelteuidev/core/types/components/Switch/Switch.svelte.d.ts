import { SvelteComponentTyped } from "svelte";
import type { SwitchProps as $$SwitchProps } from './Switch.styles';
declare const __propDef: {
    props: {
        use?: $$SwitchProps['use'];
        element?: $$SwitchProps['element'];
        class?: string;
        override?: $$SwitchProps['override'];
        color?: $$SwitchProps['color'];
        size?: $$SwitchProps['size'];
        radius?: $$SwitchProps['radius'];
        transitionFunction?: $$SwitchProps['transitionFunction'];
        id?: $$SwitchProps['id'];
        label?: $$SwitchProps['label'];
        onLabel?: $$SwitchProps['onLabel'];
        offLabel?: $$SwitchProps['offLabel'];
        disabled?: $$SwitchProps['disabled'];
        checked?: $$SwitchProps['checked'];
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {};
};
export declare type SwitchProps = typeof __propDef.props;
export declare type SwitchEvents = typeof __propDef.events;
export declare type SwitchSlots = typeof __propDef.slots;
/**
 * A user can use this component to enable/disable something, normally used for boolean values or for binary actions.
 *
 * @see https://svelteui.org/core/switch
 * @example
 * ```tsx
 * <Switch/> // standard switch
 * <Switch label="Lights" onLabel="ON" offLabel="OFF"/> // switch with labels
 * ```
 */
export default class Switch extends SvelteComponentTyped<SwitchProps, SwitchEvents, SwitchSlots> {
}
export {};
