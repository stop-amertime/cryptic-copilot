import { SvelteComponentTyped } from "svelte";
import type { TextProps as $$TextProps } from './Text.styles';
declare const __propDef: {
    props: {
        [x: string]: any;
        use?: $$TextProps['use'];
        element?: $$TextProps['element'];
        class?: string;
        override?: $$TextProps['override'];
        align?: $$TextProps['align'];
        color?: $$TextProps['color'];
        root?: $$TextProps['root'];
        transform?: $$TextProps['transform'];
        variant?: $$TextProps['variant'];
        size?: $$TextProps['size'];
        weight?: $$TextProps['weight'];
        gradient?: $$TextProps['gradient'];
        inline?: $$TextProps['inline'];
        lineClamp?: $$TextProps['lineClamp'];
        underline?: $$TextProps['underline'];
        inherit?: $$TextProps['inherit'];
        href?: $$TextProps['href'];
        tracking?: $$TextProps['tracking'];
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        default: {};
    };
};
export declare type TextProps = typeof __propDef.props;
export declare type TextEvents = typeof __propDef.events;
export declare type TextSlots = typeof __propDef.slots;
/**
 * Display text and links with theme styles.
 *
 * @see https://svelteui.org/core/text
 * @example
 *    ```tsx
 *    <Text size='lg'>This is a text</Text> // standard text component
 *    <Text size='lg' variant='gradient' gradient={{from: 'blue', to: 'red', deg: 45}}>This is a text with colours</Text> // text with gradient colors
 *    <Text component={'span'}>Span text</Text> // text being used with a 'span' as wrapper
 *    <Text component={Code}>Code text</Text> // text being used with the component Code as wrapper
 *    ```
 */
export default class Text extends SvelteComponentTyped<TextProps, TextEvents, TextSlots> {
}
export {};
