import { SvelteComponentTyped } from "svelte";
import type { TextInputProps as $$TextInputProps } from './TextInput.styles';
declare const __propDef: {
    props: {
        [x: string]: any;
        use?: $$TextInputProps['use'];
        element?: $$TextInputProps['element'];
        class?: string;
        override?: $$TextInputProps['override'];
        overrideInput?: $$TextInputProps['overrideInput'];
        label?: $$TextInputProps['label'];
        description?: $$TextInputProps['description'];
        error?: $$TextInputProps['error'];
        required?: $$TextInputProps['required'];
        labelProps?: $$TextInputProps['labelProps'];
        descriptionProps?: $$TextInputProps['descriptionProps'];
        errorProps?: $$TextInputProps['errorProps'];
        invalid?: $$TextInputProps['invalid'];
        id?: $$TextInputProps['id'];
        labelElement?: $$TextInputProps['labelElement'];
        size?: $$TextInputProps['size'];
        showRightSection?: $$TextInputProps['showRightSection'];
        value?: $$TextInputProps['value'];
        placeholder?: $$TextInputProps['placeholder'];
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        rightSection: {
            slot: string;
        };
    };
};
export declare type TextInputProps = typeof __propDef.props;
export declare type TextInputEvents = typeof __propDef.events;
export declare type TextInputSlots = typeof __propDef.slots;
/**
 * Input for text that also uses labels for the input
 *
 * @see https://svelteui.org/core/text
 * @example
 *    ```tsx
 *    <TextInput
 *        placeholder='Your name'
 *        description="Don't forget to add your full name"
 *        label='Full name'
 *        required
 *    />
 *    <TextInput
 *        placeholder='Your name'
 *        label='Full name'
 *        size='lg'
 *        on:change={onChange}
 *    />
 *    ```
 */
export default class TextInput extends SvelteComponentTyped<TextInputProps, TextInputEvents, TextInputSlots> {
}
export {};
