import { SvelteComponentTyped } from "svelte";
import type { TooltipProps as $$TooltipProps } from './Tooltip.styles';
declare const __propDef: {
    props: {
        [x: string]: any;
        use?: $$TooltipProps['use'];
        element?: $$TooltipProps['element'];
        class?: string;
        override?: $$TooltipProps['override'];
        label?: $$TooltipProps['label'];
        opened?: $$TooltipProps['opened'];
        openDelay?: $$TooltipProps['openDelay'];
        closeDelay?: $$TooltipProps['closeDelay'];
        color?: $$TooltipProps['color'];
        radius?: $$TooltipProps['radius'];
        disabled?: $$TooltipProps['disabled'];
        arrowSize?: $$TooltipProps['arrowSize'];
        width?: $$TooltipProps['width'];
        wrapLines?: $$TooltipProps['wrapLines'];
        allowPointerEvents?: $$TooltipProps['allowPointerEvents'];
        tooltipRef?: $$TooltipProps['tooltipRef'];
        tooltipId?: $$TooltipProps['tooltipId'];
        onMouseEnter?: (args?: any) => void;
        onMouseLeave?: (args?: any) => void;
        zIndex?: $$TooltipProps['zIndex'];
        position?: $$TooltipProps['position'];
        placement?: $$TooltipProps['placement'];
        gutter?: $$TooltipProps['gutter'];
        withArrow?: $$TooltipProps['withArrow'];
        transitionDuration?: $$TooltipProps['transitionDuration'];
    };
    events: {
        [evt: string]: CustomEvent<any>;
    };
    slots: {
        label: {};
        default: {};
    };
};
export declare type TooltipProps = typeof __propDef.props;
export declare type TooltipEvents = typeof __propDef.events;
export declare type TooltipSlots = typeof __propDef.slots;
export default class Tooltip extends SvelteComponentTyped<TooltipProps, TooltipEvents, TooltipSlots> {
}
export {};
