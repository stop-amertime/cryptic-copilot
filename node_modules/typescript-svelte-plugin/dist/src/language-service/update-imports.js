"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.decorateUpdateImports = void 0;
const utils_1 = require("../utils");
function decorateUpdateImports(ls, snapshotManager, logger) {
    const getEditsForFileRename = ls.getEditsForFileRename;
    ls.getEditsForFileRename = (oldFilePath, newFilePath, formatOptions, preferences) => {
        const renameLocations = getEditsForFileRename(oldFilePath, newFilePath, formatOptions, preferences);
        // If a file move/rename of a TS/JS file results a Svelte file change,
        // the Svelte extension will notice that, too, and adjusts the same imports.
        // This results in duplicate adjustments or race conditions with conflicting text spans
        // which can break imports in some cases.
        // Therefore don't do any updates of Svelte files and and also no updates of mixed TS files
        // and let the Svelte extension handle that.
        return renameLocations === null || renameLocations === void 0 ? void 0 : renameLocations.filter((renameLocation) => {
            return (!(0, utils_1.isSvelteFilePath)(renameLocation.fileName) &&
                !renameLocation.textChanges.some((change) => change.newText.endsWith('.svelte')));
        });
    };
}
exports.decorateUpdateImports = decorateUpdateImports;
//# sourceMappingURL=update-imports.js.map